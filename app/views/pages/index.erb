<div class="home-page-container">
  <div class="top-container">
    <p>main picture/video goes here</p>
    <div class="row">
      <div class="col-md-3 col-sm-1"></div>
      <div class="col-md-6 col-sm-10" id="locationField">
        <input class="form-control form-control-lg" id="autocomplete" placeholder="Enter your address" onFocus="geolocate()" type="text"></input>
      </div>
    </div>
  </div>
  <div class="info-container container">
    <div class="col-sm-12">
      <div class="row">
        <div class="info-section col-md-4">
          <p class='title'><b>Info Section</b></p>
          <p class='desc'>Here's a description about the headline above.</p>
        </div>
        <div class="info-section col-md-4">
          <p class='title'><b>More Info Section</b></p>
          <p class='desc'>Here's the longest description about the headline above It's real long.</p>
        </div>
        <div class="info-section col-md-4">
          <p class='title'><b>Even more Info Section</b></p>
          <p class='desc'>Here's a longer description about the headline above.</p>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
          document.getElementById(component).value = '';
          document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
          var addressType = place.address_components[i].types[0];
          if (componentForm[addressType]) {
            var val = place.address_components[i][componentForm[addressType]];
            document.getElementById(addressType).value = val;
          }
        }
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
<%= javascript_include_tag @url, {defer: true, async: true} %>
